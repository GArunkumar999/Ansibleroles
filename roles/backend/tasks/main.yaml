- name: disable nodejs older version
  ansible.builtin.command: dnf module disable nodejs -y

- name: enabling nodejs new version
  ansible.builtin.command: dnf module enable nodejs:20 -y

- name: install nodejs and mysql
  ansible.builtin.package:
    name: nodejs
    state: present

- name: install dependencies
  ansible.builtin.pip:
    name: "{{ item }}"
    executable: pip3.9
  loop:
    - PyMySQL
    - cryptography
- name: create expense user
  ansible.builtin.user:
    name: expense
    state: present

- name: install mysql 
  ansible.builtin.package:
    name: mysql
    state: present

- name: create app directory
  ansible.builtin.file:
    path: /app
    state: directory

- name: download application file
  ansible.builtin.get_url:
    url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
    dest: /tmp/backend.zip

- name: unzip file
  ansible.builtin.unarchive:
    src: /tmp/backend.zip
    dest: /app
    remote_src: yes

- name: install nodejs dependencies
  community.general.npm:
    name: npm
    state: present
    path: /app

- name: copy backend service file
  ansible.builtin.template:
    src: backend.service.j2
    dest: /etc/systemd/system/backend.service
  
- name: load schema
  community.mysql.mysql_db:
    login_user: "{{ user }}"
    login_password: "{{ password }}"
    login_host: "{{ hostname }}"
    state: import
    name: all
    target: /app/schema/backend.sql

- name: daemon reload start and enable
  ansible.builtin.systemd_service:
    daemon_reload: true
    state: restarted
    enabled: yes
    name: backend
